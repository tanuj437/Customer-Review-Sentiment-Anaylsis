{"metadata":{"kernelspec":{"language":"python","display_name":"Python 3","name":"python3"},"language_info":{"name":"python","version":"3.10.13","mimetype":"text/x-python","codemirror_mode":{"name":"ipython","version":3},"pygments_lexer":"ipython3","nbconvert_exporter":"python","file_extension":".py"},"kaggle":{"accelerator":"none","dataSources":[{"sourceId":2342537,"sourceType":"datasetVersion","datasetId":1412891}],"dockerImageVersionId":30733,"isInternetEnabled":true,"language":"python","sourceType":"notebook","isGpuEnabled":false}},"nbformat_minor":4,"nbformat":4,"cells":[{"cell_type":"code","source":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle/python Docker image: https://github.com/kaggle/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I/O (e.g. pd.read_csv)\n\n# Input data files are available in the read-only \"../input/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('/kaggle/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 20GB to the current directory (/kaggle/working/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to /kaggle/temp/, but they won't be saved outside of the current session","metadata":{"_uuid":"8f2839f25d086af736a60e9eeb907d3b93b6e0e5","_cell_guid":"b1076dfc-b9ad-4769-8c92-a6c4dae69d19","execution":{"iopub.status.busy":"2024-07-09T07:50:32.759288Z","iopub.execute_input":"2024-07-09T07:50:32.759795Z","iopub.status.idle":"2024-07-09T07:50:32.793479Z","shell.execute_reply.started":"2024-07-09T07:50:32.759759Z","shell.execute_reply":"2024-07-09T07:50:32.792141Z"},"trusted":true},"execution_count":3,"outputs":[{"name":"stdout","text":"/kaggle/input/amazon-us-customer-reviews-dataset/amazon_reviews_us_Watches_v1_00.tsv\n/kaggle/input/amazon-us-customer-reviews-dataset/amazon_reviews_us_Software_v1_00.tsv\n/kaggle/input/amazon-us-customer-reviews-dataset/amazon_reviews_us_PC_v1_00.tsv\n/kaggle/input/amazon-us-customer-reviews-dataset/amazon_reviews_us_Music_v1_00.tsv\n/kaggle/input/amazon-us-customer-reviews-dataset/amazon_reviews_us_Video_DVD_v1_00.tsv\n/kaggle/input/amazon-us-customer-reviews-dataset/amazon_reviews_us_Beauty_v1_00.tsv\n/kaggle/input/amazon-us-customer-reviews-dataset/amazon_reviews_us_Mobile_Electronics_v1_00.tsv\n/kaggle/input/amazon-us-customer-reviews-dataset/amazon_reviews_us_Shoes_v1_00.tsv\n/kaggle/input/amazon-us-customer-reviews-dataset/amazon_reviews_us_Apparel_v1_00.tsv\n/kaggle/input/amazon-us-customer-reviews-dataset/amazon_reviews_us_Tools_v1_00.tsv\n/kaggle/input/amazon-us-customer-reviews-dataset/amazon_reviews_us_Digital_Video_Games_v1_00.tsv\n/kaggle/input/amazon-us-customer-reviews-dataset/amazon_reviews_us_Musical_Instruments_v1_00.tsv\n/kaggle/input/amazon-us-customer-reviews-dataset/amazon_reviews_us_Toys_v1_00.tsv\n/kaggle/input/amazon-us-customer-reviews-dataset/amazon_reviews_us_Camera_v1_00.tsv\n/kaggle/input/amazon-us-customer-reviews-dataset/amazon_reviews_us_Digital_Music_Purchase_v1_00.tsv\n/kaggle/input/amazon-us-customer-reviews-dataset/amazon_reviews_us_Digital_Video_Download_v1_00.tsv\n/kaggle/input/amazon-us-customer-reviews-dataset/amazon_reviews_us_Video_v1_00.tsv\n/kaggle/input/amazon-us-customer-reviews-dataset/amazon_reviews_multilingual_US_v1_00.tsv\n/kaggle/input/amazon-us-customer-reviews-dataset/amazon_reviews_us_Digital_Software_v1_00.tsv\n/kaggle/input/amazon-us-customer-reviews-dataset/amazon_reviews_us_Digital_Ebook_Purchase_v1_01.tsv\n/kaggle/input/amazon-us-customer-reviews-dataset/amazon_reviews_us_Furniture_v1_00.tsv\n/kaggle/input/amazon-us-customer-reviews-dataset/amazon_reviews_us_Electronics_v1_00.tsv\n/kaggle/input/amazon-us-customer-reviews-dataset/amazon_reviews_us_Video_Games_v1_00.tsv\n/kaggle/input/amazon-us-customer-reviews-dataset/amazon_reviews_us_Automotive_v1_00.tsv\n/kaggle/input/amazon-us-customer-reviews-dataset/amazon_reviews_us_Mobile_Apps_v1_00.tsv\n/kaggle/input/amazon-us-customer-reviews-dataset/amazon_reviews_us_Personal_Care_Appliances_v1_00.tsv\n/kaggle/input/amazon-us-customer-reviews-dataset/amazon_reviews_us_Health_Personal_Care_v1_00.tsv\n/kaggle/input/amazon-us-customer-reviews-dataset/amazon_reviews_us_Wireless_v1_00.tsv\n/kaggle/input/amazon-us-customer-reviews-dataset/amazon_reviews_us_Major_Appliances_v1_00.tsv\n/kaggle/input/amazon-us-customer-reviews-dataset/amazon_reviews_us_Outdoors_v1_00.tsv\n/kaggle/input/amazon-us-customer-reviews-dataset/amazon_reviews_us_Gift_Card_v1_00.tsv\n/kaggle/input/amazon-us-customer-reviews-dataset/amazon_reviews_us_Office_Products_v1_00.tsv\n/kaggle/input/amazon-us-customer-reviews-dataset/amazon_reviews_us_Pet_Products_v1_00.tsv\n/kaggle/input/amazon-us-customer-reviews-dataset/amazon_reviews_us_Sports_v1_00.tsv\n/kaggle/input/amazon-us-customer-reviews-dataset/amazon_reviews_us_Grocery_v1_00.tsv\n/kaggle/input/amazon-us-customer-reviews-dataset/amazon_reviews_us_Baby_v1_00.tsv\n/kaggle/input/amazon-us-customer-reviews-dataset/amazon_reviews_us_Books_v1_02.tsv\n","output_type":"stream"}]},{"cell_type":"code","source":"import pandas as pd\n\nfile_path = '/kaggle/input/amazon-us-customer-reviews-dataset/amazon_reviews_us_Musical_Instruments_v1_00.tsv'\n\ndf = pd.read_csv(file_path, sep='\\t', on_bad_lines='skip')\n\n","metadata":{"execution":{"iopub.status.busy":"2024-07-09T07:50:32.796114Z","iopub.execute_input":"2024-07-09T07:50:32.796575Z","iopub.status.idle":"2024-07-09T07:50:48.716401Z","shell.execute_reply.started":"2024-07-09T07:50:32.796537Z","shell.execute_reply":"2024-07-09T07:50:48.715230Z"},"trusted":true},"execution_count":4,"outputs":[]},{"cell_type":"code","source":"df.head(5)","metadata":{"execution":{"iopub.status.busy":"2024-07-09T07:50:48.717797Z","iopub.execute_input":"2024-07-09T07:50:48.718145Z","iopub.status.idle":"2024-07-09T07:50:48.748935Z","shell.execute_reply.started":"2024-07-09T07:50:48.718117Z","shell.execute_reply":"2024-07-09T07:50:48.747768Z"},"trusted":true},"execution_count":5,"outputs":[{"execution_count":5,"output_type":"execute_result","data":{"text/plain":"  marketplace  customer_id       review_id  product_id  product_parent  \\\n0          US     45610553   RMDCHWD0Y5OZ9  B00HH62VB6       618218723   \n1          US     14640079   RZSL0BALIYUNU  B003LRN53I       986692292   \n2          US      6111003   RIZR67JKUDBI0  B0006VMBHI       603261968   \n3          US      1546619  R27HL570VNL85F  B002B55TRG       575084461   \n4          US     12222213  R34EBU9QDWJ1GD  B00N1YPXW2       165236328   \n\n                                       product_title     product_category  \\\n0  AGPtek® 10 Isolated Output 9V 12V 18V Guitar P...  Musical Instruments   \n1         Sennheiser HD203 Closed-Back DJ Headphones  Musical Instruments   \n2                   AudioQuest LP record clean brush  Musical Instruments   \n3      Hohner Inc. 560BX-BF Special Twenty Harmonica  Musical Instruments   \n4        Blue Yeti USB Microphone - Blackout Edition  Musical Instruments   \n\n   star_rating  helpful_votes  total_votes vine verified_purchase  \\\n0            3              0            1    N                 N   \n1            5              0            0    N                 Y   \n2            3              0            1    N                 Y   \n3            5              0            0    N                 Y   \n4            5              0            0    N                 Y   \n\n                                     review_headline  \\\n0                                        Three Stars   \n1                                         Five Stars   \n2                                        Three Stars   \n3  I purchase these for a friend in return for pl...   \n4                                         Five Stars   \n\n                                         review_body review_date  \n0        Works very good, but induces ALOT of noise.  2015-08-31  \n1             Nice headphones at a reasonable price.  2015-08-31  \n2                       removes dust. does not clean  2015-08-31  \n3  I purchase these for a friend in return for pl...  2015-08-31  \n4                            This is an awesome mic!  2015-08-31  ","text/html":"<div>\n<style scoped>\n    .dataframe tbody tr th:only-of-type {\n        vertical-align: middle;\n    }\n\n    .dataframe tbody tr th {\n        vertical-align: top;\n    }\n\n    .dataframe thead th {\n        text-align: right;\n    }\n</style>\n<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th></th>\n      <th>marketplace</th>\n      <th>customer_id</th>\n      <th>review_id</th>\n      <th>product_id</th>\n      <th>product_parent</th>\n      <th>product_title</th>\n      <th>product_category</th>\n      <th>star_rating</th>\n      <th>helpful_votes</th>\n      <th>total_votes</th>\n      <th>vine</th>\n      <th>verified_purchase</th>\n      <th>review_headline</th>\n      <th>review_body</th>\n      <th>review_date</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <th>0</th>\n      <td>US</td>\n      <td>45610553</td>\n      <td>RMDCHWD0Y5OZ9</td>\n      <td>B00HH62VB6</td>\n      <td>618218723</td>\n      <td>AGPtek® 10 Isolated Output 9V 12V 18V Guitar P...</td>\n      <td>Musical Instruments</td>\n      <td>3</td>\n      <td>0</td>\n      <td>1</td>\n      <td>N</td>\n      <td>N</td>\n      <td>Three Stars</td>\n      <td>Works very good, but induces ALOT of noise.</td>\n      <td>2015-08-31</td>\n    </tr>\n    <tr>\n      <th>1</th>\n      <td>US</td>\n      <td>14640079</td>\n      <td>RZSL0BALIYUNU</td>\n      <td>B003LRN53I</td>\n      <td>986692292</td>\n      <td>Sennheiser HD203 Closed-Back DJ Headphones</td>\n      <td>Musical Instruments</td>\n      <td>5</td>\n      <td>0</td>\n      <td>0</td>\n      <td>N</td>\n      <td>Y</td>\n      <td>Five Stars</td>\n      <td>Nice headphones at a reasonable price.</td>\n      <td>2015-08-31</td>\n    </tr>\n    <tr>\n      <th>2</th>\n      <td>US</td>\n      <td>6111003</td>\n      <td>RIZR67JKUDBI0</td>\n      <td>B0006VMBHI</td>\n      <td>603261968</td>\n      <td>AudioQuest LP record clean brush</td>\n      <td>Musical Instruments</td>\n      <td>3</td>\n      <td>0</td>\n      <td>1</td>\n      <td>N</td>\n      <td>Y</td>\n      <td>Three Stars</td>\n      <td>removes dust. does not clean</td>\n      <td>2015-08-31</td>\n    </tr>\n    <tr>\n      <th>3</th>\n      <td>US</td>\n      <td>1546619</td>\n      <td>R27HL570VNL85F</td>\n      <td>B002B55TRG</td>\n      <td>575084461</td>\n      <td>Hohner Inc. 560BX-BF Special Twenty Harmonica</td>\n      <td>Musical Instruments</td>\n      <td>5</td>\n      <td>0</td>\n      <td>0</td>\n      <td>N</td>\n      <td>Y</td>\n      <td>I purchase these for a friend in return for pl...</td>\n      <td>I purchase these for a friend in return for pl...</td>\n      <td>2015-08-31</td>\n    </tr>\n    <tr>\n      <th>4</th>\n      <td>US</td>\n      <td>12222213</td>\n      <td>R34EBU9QDWJ1GD</td>\n      <td>B00N1YPXW2</td>\n      <td>165236328</td>\n      <td>Blue Yeti USB Microphone - Blackout Edition</td>\n      <td>Musical Instruments</td>\n      <td>5</td>\n      <td>0</td>\n      <td>0</td>\n      <td>N</td>\n      <td>Y</td>\n      <td>Five Stars</td>\n      <td>This is an awesome mic!</td>\n      <td>2015-08-31</td>\n    </tr>\n  </tbody>\n</table>\n</div>"},"metadata":{}}]},{"cell_type":"code","source":"df.info()","metadata":{"execution":{"iopub.status.busy":"2024-07-09T07:50:48.752076Z","iopub.execute_input":"2024-07-09T07:50:48.752541Z","iopub.status.idle":"2024-07-09T07:50:49.780267Z","shell.execute_reply.started":"2024-07-09T07:50:48.752501Z","shell.execute_reply":"2024-07-09T07:50:49.779182Z"},"trusted":true},"execution_count":6,"outputs":[{"name":"stdout","text":"<class 'pandas.core.frame.DataFrame'>\nRangeIndex: 904004 entries, 0 to 904003\nData columns (total 15 columns):\n #   Column             Non-Null Count   Dtype \n---  ------             --------------   ----- \n 0   marketplace        904004 non-null  object\n 1   customer_id        904004 non-null  int64 \n 2   review_id          904004 non-null  object\n 3   product_id         904004 non-null  object\n 4   product_parent     904004 non-null  int64 \n 5   product_title      904003 non-null  object\n 6   product_category   904004 non-null  object\n 7   star_rating        904004 non-null  int64 \n 8   helpful_votes      904004 non-null  int64 \n 9   total_votes        904004 non-null  int64 \n 10  vine               904004 non-null  object\n 11  verified_purchase  904004 non-null  object\n 12  review_headline    903998 non-null  object\n 13  review_body        903941 non-null  object\n 14  review_date        903996 non-null  object\ndtypes: int64(5), object(10)\nmemory usage: 103.5+ MB\n","output_type":"stream"}]},{"cell_type":"code","source":"df.describe()","metadata":{"execution":{"iopub.status.busy":"2024-07-09T07:50:49.781529Z","iopub.execute_input":"2024-07-09T07:50:49.781872Z","iopub.status.idle":"2024-07-09T07:50:49.949777Z","shell.execute_reply.started":"2024-07-09T07:50:49.781844Z","shell.execute_reply":"2024-07-09T07:50:49.948648Z"},"trusted":true},"execution_count":7,"outputs":[{"execution_count":7,"output_type":"execute_result","data":{"text/plain":"        customer_id  product_parent    star_rating  helpful_votes  \\\ncount  9.040040e+05    9.040040e+05  904004.000000  904004.000000   \nmean   2.732998e+07    4.947593e+08       4.251045       1.862232   \nstd    1.551727e+07    2.887905e+08       1.216422      13.084428   \nmin    1.011300e+04    2.765700e+04       1.000000       0.000000   \n25%    1.403699e+07    2.377766e+08       4.000000       0.000000   \n50%    2.580934e+07    4.915932e+08       5.000000       0.000000   \n75%    4.190775e+07    7.452023e+08       5.000000       1.000000   \nmax    5.309656e+07    9.999951e+08       5.000000    4709.000000   \n\n         total_votes  \ncount  904004.000000  \nmean        2.385869  \nstd        13.891941  \nmin         0.000000  \n25%         0.000000  \n50%         0.000000  \n75%         2.000000  \nmax      4805.000000  ","text/html":"<div>\n<style scoped>\n    .dataframe tbody tr th:only-of-type {\n        vertical-align: middle;\n    }\n\n    .dataframe tbody tr th {\n        vertical-align: top;\n    }\n\n    .dataframe thead th {\n        text-align: right;\n    }\n</style>\n<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th></th>\n      <th>customer_id</th>\n      <th>product_parent</th>\n      <th>star_rating</th>\n      <th>helpful_votes</th>\n      <th>total_votes</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <th>count</th>\n      <td>9.040040e+05</td>\n      <td>9.040040e+05</td>\n      <td>904004.000000</td>\n      <td>904004.000000</td>\n      <td>904004.000000</td>\n    </tr>\n    <tr>\n      <th>mean</th>\n      <td>2.732998e+07</td>\n      <td>4.947593e+08</td>\n      <td>4.251045</td>\n      <td>1.862232</td>\n      <td>2.385869</td>\n    </tr>\n    <tr>\n      <th>std</th>\n      <td>1.551727e+07</td>\n      <td>2.887905e+08</td>\n      <td>1.216422</td>\n      <td>13.084428</td>\n      <td>13.891941</td>\n    </tr>\n    <tr>\n      <th>min</th>\n      <td>1.011300e+04</td>\n      <td>2.765700e+04</td>\n      <td>1.000000</td>\n      <td>0.000000</td>\n      <td>0.000000</td>\n    </tr>\n    <tr>\n      <th>25%</th>\n      <td>1.403699e+07</td>\n      <td>2.377766e+08</td>\n      <td>4.000000</td>\n      <td>0.000000</td>\n      <td>0.000000</td>\n    </tr>\n    <tr>\n      <th>50%</th>\n      <td>2.580934e+07</td>\n      <td>4.915932e+08</td>\n      <td>5.000000</td>\n      <td>0.000000</td>\n      <td>0.000000</td>\n    </tr>\n    <tr>\n      <th>75%</th>\n      <td>4.190775e+07</td>\n      <td>7.452023e+08</td>\n      <td>5.000000</td>\n      <td>1.000000</td>\n      <td>2.000000</td>\n    </tr>\n    <tr>\n      <th>max</th>\n      <td>5.309656e+07</td>\n      <td>9.999951e+08</td>\n      <td>5.000000</td>\n      <td>4709.000000</td>\n      <td>4805.000000</td>\n    </tr>\n  </tbody>\n</table>\n</div>"},"metadata":{}}]},{"cell_type":"code","source":"missing_values = df.isnull().sum()\nprint(missing_values[missing_values > 0])\n","metadata":{"execution":{"iopub.status.busy":"2024-07-09T07:50:49.951359Z","iopub.execute_input":"2024-07-09T07:50:49.951815Z","iopub.status.idle":"2024-07-09T07:50:50.987604Z","shell.execute_reply.started":"2024-07-09T07:50:49.951776Z","shell.execute_reply":"2024-07-09T07:50:50.986265Z"},"trusted":true},"execution_count":8,"outputs":[{"name":"stdout","text":"product_title       1\nreview_headline     6\nreview_body        63\nreview_date         8\ndtype: int64\n","output_type":"stream"}]},{"cell_type":"code","source":"print(df.duplicated().sum())\n","metadata":{"execution":{"iopub.status.busy":"2024-07-09T07:50:50.989460Z","iopub.execute_input":"2024-07-09T07:50:50.989959Z","iopub.status.idle":"2024-07-09T07:50:53.475749Z","shell.execute_reply.started":"2024-07-09T07:50:50.989918Z","shell.execute_reply":"2024-07-09T07:50:53.474676Z"},"trusted":true},"execution_count":9,"outputs":[{"name":"stdout","text":"0\n","output_type":"stream"}]},{"cell_type":"code","source":"categorical_cols = df.select_dtypes(include=['object']).columns\nfor col in categorical_cols:\n    print(f'{col} value counts:')\n    print(df[col].value_counts())\n    print('\\n')\n","metadata":{"execution":{"iopub.status.busy":"2024-07-09T07:50:53.477648Z","iopub.execute_input":"2024-07-09T07:50:53.478109Z","iopub.status.idle":"2024-07-09T07:50:57.906385Z","shell.execute_reply.started":"2024-07-09T07:50:53.478069Z","shell.execute_reply":"2024-07-09T07:50:57.905263Z"},"trusted":true},"execution_count":10,"outputs":[{"name":"stdout","text":"marketplace value counts:\nmarketplace\nUS    904004\nName: count, dtype: int64\n\n\nreview_id value counts:\nreview_id\nRMDCHWD0Y5OZ9     1\nR3S412W8T2Z3GI    1\nR3MUONACD026CD    1\nR3ONNIRFYG6OHY    1\nR2Z2AUXTIJOLCA    1\n                 ..\nR28R8B3MWT1B2B    1\nR3OYZ2EDMOMINL    1\nR2WSRTM2XLEQER    1\nR30ROIFFUM2Z4K    1\nR2XJJXFZOM36V5    1\nName: count, Length: 904004, dtype: int64\n\n\nproduct_id value counts:\nproduct_id\nB003VWJ2K8    3158\nB000ULAP4U    2917\nB003LPTAYI    2554\nB00007E7C8    2451\nB000AJIF4E    2216\n              ... \nB0002E4XQQ       1\nB003AYE892       1\nB00593TH16       1\nB00L64RBJW       1\n0793587395       1\nName: count, Length: 123284, dtype: int64\n\n\nproduct_title value counts:\nproduct_title\nAudio-Technica ATH Professional Studio Monitor Headphones                                                                                     4811\nSnark SN-1 Tuner                                                                                                                              3158\nBlue Yeti USB Microphone - Blackout Edition                                                                                                   2631\nSennheiser HD 202 II Professional Headphones (Black)                                                                                          2554\nAudio-Technica ATH-M30 Closed-Back Headphones                                                                                                 2451\n                                                                                                                                              ... \nGuitar Strap BLUE BANDANA ON BLACK NYLON Solid Leather Ends Fits All Acoustic Electric & Bass & Mandolin Quality Made In U.S.A. Since 1978       1\nRailhammer Hyper Vintage Humbucker Pickup Bridge Black                                                                                           1\nKun Original Mini Blue Shoulder Rest for 1/8 - 1/4 Violin                                                                                        1\nTC-Helicon VoiceLive Harmony Correction Effects                                                                                                  1\nHal Leonard Third Eye Blind - Guitar Recorded Version                                                                                            1\nName: count, Length: 110942, dtype: int64\n\n\nproduct_category value counts:\nproduct_category\nMusical Instruments    904004\nName: count, dtype: int64\n\n\nvine value counts:\nvine\nN    901718\nY      2286\nName: count, dtype: int64\n\n\nverified_purchase value counts:\nverified_purchase\nY    780914\nN    123090\nName: count, dtype: int64\n\n\nreview_headline value counts:\nreview_headline\nFive Stars                                           108351\nFour Stars                                            20806\nThree Stars                                            7727\nOne Star                                               7283\nTwo Stars                                              3792\n                                                      ...  \nExcellent product extremely comfortable                   1\nA No-Brainer Excellent Buy                                1\nBand members wanted.  I'm playing these.                  1\nFor some reason I put off buying one of these ...         1\nI've got the beat!                                        1\nName: count, Length: 529497, dtype: int64\n\n\nreview_body value counts:\nreview_body\ngoodnGoodnGreatngreatnExcellentnnThis works great for me. I use it to run the sound from a 1/4&#34; sound board output to my 1/8&#34; PC line innThis model is a good deal for the money,plays well but like all guitars needs new strings and needs to be set up properly,<br />if you can't do this you need to hire a pro to do it. That is a fact on any guitar period. The case that you get with this package is very nice and worth about an extra $100, but it is free,Great Deal and a very good guitar to learn on , you<br />need to learn to use the electronics but not hard and a feedback noise reducing plug may help also when using an<br />Amp. Just remember it is a $300 guitar and not a $1,000 guitar but the trick is to try to make it sound like a better guitar!       1\nI installed these on both basses. If you don't have this, it is because you don't know about it, or you don't play guitar or bass. Once you have these installed, you are going to feel confident that your instrument is not going to slip out of the strap if you lean the wrong way. This is because you have to press the button to place the strap on the guitar, and when you release the button, it's locked in place. You repeat the process to remove the strap, which you can now use on another guitar or bass that has the system.                                                                                                   1\nDam thing broke after a weeks worth of usenThis Yamaha keyboard does everything! I can hook it up to my computer to write music. The disk drive makes it easy to record music and it acts almost like a player piano.                                                                                                                                                                                                                                                                                                                                                                                                                                                                       1\nName: count, Length: 851129, dtype: int64\n\n\nreview_date value counts:\nreview_date\n2015-01-05    2043\n2015-01-03    1924\n2015-01-07    1757\n2015-01-09    1725\n2014-12-29    1716\n              ... \n2003-06-17       1\n2005-05-12       1\n2005-05-09       1\n2003-06-20       1\n1999-12-13       1\nName: count, Length: 4558, dtype: int64\n\n\n","output_type":"stream"}]},{"cell_type":"code","source":"import matplotlib.pyplot as plt\nimport seaborn as sns","metadata":{"execution":{"iopub.status.busy":"2024-07-09T07:50:57.907773Z","iopub.execute_input":"2024-07-09T07:50:57.908100Z","iopub.status.idle":"2024-07-09T07:50:58.471026Z","shell.execute_reply.started":"2024-07-09T07:50:57.908072Z","shell.execute_reply":"2024-07-09T07:50:58.469800Z"},"trusted":true},"execution_count":11,"outputs":[]},{"cell_type":"code","source":"df.columns","metadata":{"execution":{"iopub.status.busy":"2024-07-09T07:50:58.475405Z","iopub.execute_input":"2024-07-09T07:50:58.475825Z","iopub.status.idle":"2024-07-09T07:50:58.483364Z","shell.execute_reply.started":"2024-07-09T07:50:58.475794Z","shell.execute_reply":"2024-07-09T07:50:58.482112Z"},"trusted":true},"execution_count":12,"outputs":[{"execution_count":12,"output_type":"execute_result","data":{"text/plain":"Index(['marketplace', 'customer_id', 'review_id', 'product_id',\n       'product_parent', 'product_title', 'product_category', 'star_rating',\n       'helpful_votes', 'total_votes', 'vine', 'verified_purchase',\n       'review_headline', 'review_body', 'review_date'],\n      dtype='object')"},"metadata":{}}]},{"cell_type":"code","source":"print(df[['star_rating', 'helpful_votes']].describe())\n","metadata":{"execution":{"iopub.status.busy":"2024-07-09T07:50:58.484940Z","iopub.execute_input":"2024-07-09T07:50:58.485295Z","iopub.status.idle":"2024-07-09T07:50:58.567052Z","shell.execute_reply.started":"2024-07-09T07:50:58.485264Z","shell.execute_reply":"2024-07-09T07:50:58.565858Z"},"trusted":true},"execution_count":13,"outputs":[{"name":"stdout","text":"         star_rating  helpful_votes\ncount  904004.000000  904004.000000\nmean        4.251045       1.862232\nstd         1.216422      13.084428\nmin         1.000000       0.000000\n25%         4.000000       0.000000\n50%         5.000000       0.000000\n75%         5.000000       1.000000\nmax         5.000000    4709.000000\n","output_type":"stream"}]},{"cell_type":"code","source":"missing_values = df[['review_headline', 'review_body', 'helpful_votes', 'star_rating']].isnull().sum()\nprint(missing_values[missing_values > 0])\n","metadata":{"execution":{"iopub.status.busy":"2024-07-09T07:50:58.568941Z","iopub.execute_input":"2024-07-09T07:50:58.569337Z","iopub.status.idle":"2024-07-09T07:50:58.870319Z","shell.execute_reply.started":"2024-07-09T07:50:58.569307Z","shell.execute_reply":"2024-07-09T07:50:58.869142Z"},"trusted":true},"execution_count":14,"outputs":[{"name":"stdout","text":"review_headline     6\nreview_body        63\ndtype: int64\n","output_type":"stream"}]},{"cell_type":"code","source":"sns.countplot(data=df, x='star_rating')\nplt.title('Distribution of Star Ratings')\nplt.show()\n","metadata":{"execution":{"iopub.status.busy":"2024-07-09T07:50:58.871623Z","iopub.execute_input":"2024-07-09T07:50:58.872000Z","iopub.status.idle":"2024-07-09T07:50:59.245923Z","shell.execute_reply.started":"2024-07-09T07:50:58.871971Z","shell.execute_reply":"2024-07-09T07:50:59.244751Z"},"trusted":true},"execution_count":15,"outputs":[{"output_type":"display_data","data":{"text/plain":"<Figure size 640x480 with 1 Axes>","image/png":"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KDIy8oqvuSlWp04dde7cWUOHDlVWVpZmzJihxo0buyz78Oijj2rZsmW655579NBDD+nQoUP6xz/+4XLh+JX21rt3b3Xr1k0vvviivvvuO7Vp00afffaZli9frlGjRpWYu6Iee+wxvfHGGxoyZIgyMjIUFhamZcuWafPmzZoxY8avXuN2Of/5z3/0xz/+UT179tQdd9yhOnXq6H//+58WLVqko0ePasaMGWZoateunSTpxRdf1IABA1StWjX17t1bPXr0kLe3t3r37q3HH39cp0+f1ptvvql69erp2LFjlvzslwoICNDQoUM1b948ffPNN2revLl69eqld955R35+foqIiFB6err++c9/llimom3btvL09NRrr72m3Nxc2e12c42tivL29tb48eM1cuRIde/eXQ899JC+++47paSk6KabbnI5O9ajRw8FBwerU6dOCgoK0jfffKM5c+YoNja2Qu8hUIIb7zwEcIniJRWKH97e3kZwcLBx9913GzNnznS5db/YpUsqpKWlGffff78REhJieHt7GyEhIcbAgQON//73vy7PW758uREREWF4eXm5LGFw5513Xva288vd9v7ee+8ZY8eONerVq2f4+voasbGxpS4NMG3aNOOGG24w7Ha70alTJ2P79u0l5vy13i5dUsEwDOPUqVPG6NGjjZCQEKNatWpGkyZNjKlTp7rc8m8YvyypEB8fX6Knyy31cKmsrCxj6NChRt26dQ1vb2+jVatWpS77UN4lFbKysozJkycbd955p1G/fn3Dy8vLqF27ttG9e3dj2bJlJer//Oc/GzfccIPh4eHhsrzCihUrjNatWxs+Pj5GWFiY8dprrxlvv/12iSUYyttXseIlFUpz6NAhw9PT03zdTp48ab42NWvWNGJiYox9+/aV+tq++eabxo033mh4enq6LK9wub9bS5cudXn+4cOHS11yY9asWUZoaKhht9uNjh07Gps3bzbatWtn3HPPPWbNG2+8YXTp0sUICAgw7Ha7cdNNNxljxowxcnNzy/26AL/GZhjXwBWaAABYqKioSIGBgXrggQf05ptvursdVBFcUwUAqNTOnTtX4pquv//97zpx4kSpX6sEXC2cqQIAVGobNmzQ6NGj9eCDDyogIEA7duzQ//3f/6l58+bKyMjgy5rxu+FCdQBApRYWFqaGDRtq1qxZOnHihOrUqaOHH35YkydPJlDhd+X2j//+97//6U9/+pMCAgLk6+urVq1aafv27eZ+wzCUnJys+vXry9fXV9HR0SXWxDlx4oQGDRokh8Mhf39/DRs2TKdPn3ap+frrr3XHHXfIx8dHDRs21JQpU0r0snTpUjVr1kw+Pj5q1apVia/YKE8vAIDfV1hYmFasWCGn06mCggI5nU69/fbbv+muQqAi3BqqTp48qU6dOqlatWpas2aN9u7dq2nTprl8X9OUKVM0a9YsLViwQFu3blWNGjUUExPjslDboEGDtGfPHqWmpmrVqlXatGmTHnvsMXN/Xl6eevToodDQUGVkZGjq1KkaP368/va3v5k1W7Zs0cCBAzVs2DB99dVX6tOnj/r06aPdu3dfUS8AAKCKcuOdh0ZSUpLRuXPny+4vKioygoODjalTp5pjOTk5ht1uN9577z3DMAxj7969hiRj27ZtZs2aNWsMm81m/O9//zMMwzDmzZtn1K5d2+WbzpOSkoymTZua2w899FCJ240jIyONxx9/vNy9AACAqsut11StWLFCMTExevDBB7Vx40bdcMMNevLJJ80FAw8fPiyn06no6GjzOX5+foqMjFR6eroGDBig9PR0+fv7q3379mZNdHS0PDw8tHXrVv3hD39Qenq6unTp4vLZekxMjF577TWdPHlStWvXVnp6uhITE136i4mJ0SeffFLuXspSVFSko0ePqlatWlfl6xoAAID1DMPQqVOnFBISUuKL1S/m1lD17bffav78+UpMTNQLL7ygbdu26amnnpK3t7fi4uLkdDolSUFBQS7PCwoKMvc5nc4Sn5t7eXmpTp06LjWXrsZcPKfT6VTt2rXldDrLPE5ZvVwqPz/f/FoQ6ZfrxyIiIsp4VQAAwLXoyJEjatCgwWX3uzVUFRUVqX379vrLX/4iSbrlllu0e/duLViwQHFxce5szRKTJk3ShAkTSowfOXJEDofDDR0BAIArlZeXp4YNG5b5dUZuDVX169cvceamefPm+vDDDyVJwcHBkqSsrCzVr1/frMnKyjK/IDY4OFjZ2dkuc1y4cEEnTpwwnx8cHKysrCyXmuLtsmou3l9WL5caO3asy0eKxW+Kw+EgVAEAUMmUdemOW+/+69Spk/bv3+8y9t///lehoaGSpPDwcAUHBystLc3cn5eXp61btyoqKkqSFBUVpZycHGVkZJg169evV1FRkSIjI82aTZs2uXwLeWpqqpo2bWreaRgVFeVynOKa4uOUp5dL2e12M0ARpAAAuM658yr5L7/80vDy8jImTpxoHDhwwHj33XeN6tWrG//4xz/MmsmTJxv+/v7G8uXLja+//tq4//77jfDwcOPs2bNmzT333GPccsstxtatW41///vfRpMmTYyBAwea+3NycoygoCBj8ODBxu7du43333/fqF69uvHGG2+YNZs3bza8vLyMv/71r8Y333xjjBs3zqhWrZqxa9euK+rl1+Tm5hqS+PJOAAAqkfL+/nZrqDIMw1i5cqXRsmVLw263G82aNTP+9re/uewvKioyXn75ZSMoKMiw2+3GXXfdZezfv9+l5qeffjIGDhxo1KxZ03A4HMbQoUONU6dOudT85z//MTp37mzY7XbjhhtuMCZPnlyilyVLlhg333yz4e3tbbRo0cJYvXr1FffyawhVAABUPuX9/c13//2O8vLy5Ofnp9zcXD4KBACgkijv72+3f00NAADA9YBQBQAAYAFCFQAAgAUIVQAAABYgVAEAAFiAUAUAAGABQhUAAIAFCFUAAAAWIFQBAABYgFAFAABgAUIVAACABbzc3QAAAPht5jyz0t0tVFoJ03pbNhdnqgAAACxAqAIAALAAoQoAAMAChCoAAAALEKoAAAAsQKgCAACwAKEKAADAAoQqAAAACxCqAAAALECoAgAAsAChCgAAwAKEKgAAAAsQqgAAACxAqAIAALAAoQoAAMAChCoAAAALEKoAAAAsQKgCAACwAKEKAADAAoQqAAAACxCqAAAALECoAgAAsAChCgAAwAKEKgAAAAsQqgAAACxAqAIAALAAoQoAAMAChCoAAAALEKoAAAAsQKgCAACwAKEKAADAAoQqAAAACxCqAAAALECoAgAAsAChCgAAwAKEKgAAAAsQqgAAACxAqAIAALAAoQoAAMACbg1V48ePl81mc3k0a9bM3H/u3DnFx8crICBANWvWVN++fZWVleUyR2ZmpmJjY1W9enXVq1dPY8aM0YULF1xqNmzYoFtvvVV2u12NGzdWSkpKiV7mzp2rsLAw+fj4KDIyUl9++aXL/vL0AgAAqi63n6lq0aKFjh07Zj7+/e9/m/tGjx6tlStXaunSpdq4caOOHj2qBx54wNxfWFio2NhYFRQUaMuWLVq0aJFSUlKUnJxs1hw+fFix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tfnnvXv3yul0mtuFhYVau3atbrjhBuu6AwAAqCSuKFS1bdtWNptNNput1I/5fH19NXv2bMuaAwAAqCyuKFQdPnxYhmHoxhtv1JdffqnAwEBzn7e3t+rVqydPT0/LmwQAALjWXVGoCg0NlSQVFRVdlWYAAAAqqysKVRc7cOCAPv/8c2VnZ5cIWcnJyb+5MQAAgMqkQqHqzTff1IgRI1S3bl0FBwfLZrOZ+2w2G6EKAABUORUKVa+++qomTpyopKQkq/sBAAColCq0TtXJkyf14IMPWt0LAABApVWhUPXggw/qs88+s7oXAACASqtCH/81btxYL7/8sr744gu1atVK1apVc9n/1FNPWdIcAABAZVGhUPW3v/1NNWvW1MaNG7Vx40aXfTabjVAFAACqnAp9/Hf48OHLPr799ttyzzN//ny1bt1aDodDDodDUVFRWrNmjbn/3Llzio+PV0BAgGrWrKm+ffsqKyvLZY7MzEzFxsaqevXqqlevnsaMGaMLFy641GzYsEG33nqr7Ha7GjdurJSUlBK9zJ07V2FhYfLx8VFkZKS+/PJLl/3l6QUAAFRdFQpVVmnQoIEmT56sjIwMbd++Xd27d9f999+vPXv2SJJGjx6tlStXaunSpdq4caOOHj2qBx54wHx+YWGhYmNjVVBQoC1btmjRokVKSUlxWdLh8OHDio2NVbdu3bRz506NGjVKjz76qNatW2fWfPDBB0pMTNS4ceO0Y8cOtWnTRjExMcrOzjZryuoFAABUbTbDMIwrfdIjjzzyq/vffvvtCjdUp04dTZ06Vf369VNgYKAWL16sfv36SZL27dun5s2bKz09XbfddpvWrFmjXr166ejRowoKCpIkLViwQElJSTp+/Li8vb2VlJSk1atXa/fu3eYxBgwYoJycHK1du1aSFBkZqQ4dOmjOnDmSflkxvmHDhho5cqSef/555ebmltlLeeTl5cnPz0+5ublyOBwVfo0AALjYnGdWuruFSithWu8ya8r7+7vCSypc/MjOztb69ev10UcfKScnpyJTqrCwUO+//77OnDmjqKgoZWRk6Pz584qOjjZrmjVrpkaNGik9PV2SlJ6erlatWpmBSpJiYmKUl5dnnu1KT093maO4pniOgoICZWRkuNR4eHgoOjrarClPL6XJz89XXl6eywMAAFyfKnSh+scff1xirKioSCNGjNBNN910RXPt2rVLUVFROnfunGrWrKmPP/5YERER2rlzp7y9veXv7+9SHxQUJKfTKUlyOp0ugap4f/G+X6vJy8vT2bNndfLkSRUWFpZas2/fPnOOsnopzaRJkzRhwoTyvRAAAKBSs+yaKg8PDyUmJmr69OlX9LymTZtq586d2rp1q0aMGKG4uDjt3bvXqrbcauzYscrNzTUfR44ccXdLAADgKqnwFyqX5tChQyXuvCuLt7e3GjduLElq166dtm3bppkzZ6p///4qKChQTk6OyxmirKwsBQcHS5KCg4NL3KVXfEfexTWX3qWXlZUlh8MhX19feXp6ytPTs9Sai+coq5fS2O122e32K3g1AABAZVWhUJWYmOiybRiGjh07ptWrVysuLu43NVRUVKT8/Hy1a9dO1apVU1pamvr27StJ2r9/vzIzMxUVFSVJioqK0sSJE5Wdna169epJklJTU+VwOBQREWHWfPrppy7HSE1NNefw9vZWu3btlJaWpj59+pg9pKWlKSEhQZLK1QsAAKjaKhSqvvrqK5dtDw8PBQYGatq0aWXeGXixsWPHqmfPnmrUqJFOnTqlxYsXa8OGDVq3bp38/Pw0bNgwJSYmqk6dOnI4HBo5cqSioqLMu+169OihiIgIDR48WFOmTJHT6dRLL72k+Ph48wzRE088oTlz5ui5557TI488ovXr12vJkiVavXq12UdiYqLi4uLUvn17dezYUTNmzNCZM2c0dOhQSSpXLwAAoGqrUKj6/PPPLTl4dna2Hn74YR07dkx+fn5q3bq11q1bp7vvvluSNH36dHl4eKhv377Kz89XTEyM5s2bZz7f09NTq1at0ogRIxQVFaUaNWooLi5Or7zyilkTHh6u1atXa/To0Zo5c6YaNGigt956SzExMWZN//79dfz4cSUnJ8vpdKpt27Zau3aty8XrZfUCAACqtgqtU1Xs+PHj2r9/v6RfLjgPDAy0rLHrEetUAQCuBtapqji3r1N15swZPfLII6pfv766dOmiLl26KCQkRMOGDdPPP/9ckSkBAAAqtQqFqsTERG3cuFErV65UTk6OcnJytHz5cm3cuFHPPPOM1T0CAABc8yp0TdWHH36oZcuWqWvXrubYvffeK19fXz300EOaP3++Vf0BAABUChU6U/Xzzz+XWIFckurVq8fHfwAAoEqqUKiKiorSuHHjdO7cOXPs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/fe1Y8cObdu2zd2tVHmRkZFKSUlR06ZNdezYMU2YMEF33HGHdu/erVq1arm7vauGUAVUYvHx8dq9e3eVuFbhWta0aVPt3LlTubm5WrZsmeLi4rRx40aC1e/oyJEjevrpp5WamiofHx93t1PlXXypSOvWrRUZGanQ0FAtWbJEw4YNc2NnVxehCqikEhIStGrVKm3atEkNGjRwdztVmre3txo3bixJateunbZt26aZM2fqjTfecHNnVUdGRoays7N16623mmOFhYXatGmT5syZo/z8fHl6erqxw6rN399fN998sw4ePOjuVq4qQhVQyRiGoZEjR+rjjz/Whg0bFB4e7u6WcImioiLl5+e7u40q5a677tKuXbtcxoYOHapmzZopKSmJQOVmp0+f1qFDhzR48GB3t3JVEapQbqdPn3b5r4zDhw9r586dqlOnjho1auTGzqqW+Ph4LV68WMuXL1etWrXkdDolSX5+fvL19XVzd1XP2LFj1bNnTzVq1EinTp3S4sWLtWHDBq1bt87drVUptWrVKnFdYY0aNRQQEMD1hm7w7LPPqnfv3goNDdXRo0c1btw4eXp6auDAge5u7aoiVKHctm/frm7dupnbiYmJkqS4uDilpKS4qauqZ/78+ZKkrl27uowvXLhQQ4YM+f0bquKys7P18MMP69ixY/Lz81Pr1q21bt063X333e5uDXCbH374QQMHDtRPP/2kwMBAde7cWV988YUCAwPd3dpVZTMMw3B3EwAAAJUd61QBAABYgFAFAABgAUIVAACABQhVAAAAFiBUAQAAWIBQBQAAYAFCFQAAgAUIVQBwDQkLC9OMGTPc3QaACiBUAbjuDBkyRH369HF3G78qJSVF/v7+Jca3bdumxx577PdvCMBvRqgCgMsoKCj4XZ5zscDAQFWvXv03zQHAPQhVACqtZcuWqVWrVvL19VVAQICio6M1ZswYLVq0SMuXL5fNZpPNZtOGDRskSUlJSbr55ptVvXp13XjjjXr55Zd1/vx5c77x48erbdu2euuttxQeHi4fH58ye+jatasSEhI0atQo1a1bVzExMZKk119/Xa1atVKNGjXUsGFDPfnkkzp9+rQkacOGDRo6dKhyc3PNHsePHy+p5Md/NptNb731lv7whz+oevXqatKkiVasWOHSw4oVK9SkSRP5+PioW7duWrRokWw2m3Jycir+4gK4YnyhMoBK6dixYxo4cKCmTJmiP/zhDzp16pT+9a9/6eGHH1ZmZqby8vK0cOFCSVKdOnUkSbVq1VJKSopCQkK0a9cuDR8+XLVq1dJzzz1nznvw4EF9+OGH+uijj+Tp6VmuXhYtWqQRI0Zo8+bN5piHh4dmzZql8PBwffvtt3ryySf13HPPad68ebr99ts1Y8YMJScna//+/ZKkmjVrXnb+CRMmaMqUKZo6dapmz56tQYMG6fvvv1edOnV0+PBh9evXT08//bQeffRRffXVV3r22Wev+PUEYAEDACqhjIwMQ5Lx3XffldgXFxdn3H///WXOMXXqVKNdu3bm9rhx44xq1aoZ2dnZ5e7jzjvvNG655ZYy65YuXWoEBASY2wsXLjT8/PxK1IWGhhrTp083tyUZL730krl9+vRpQ5KxZs0awzAMIykpyWjZsqXLHC+++KIhyTh58mS5fw4Avx1nqgBUSm3atNFdd92lVq1aKSYmRj169FC/fv1Uu3btyz7ngw8+0KxZs3To0CGdPn1aFy5ckMPhcKkJDQ1VYGDgFfXSrl27EmP//Oc/NWnSJO3bt095eXm6cOGCzp07p59//vmKr5lq3bq1+ecaNWrI4XAoOztbkrR//3516NDBpb5jx45XND8Aa3BNFYBKydPTU6mpqVqzZo0iIiI0e/ZsNW3aVIcPHy61Pj09XYMGDdK9996rVatW6auvvtKLL75Y4sLyGjVqXHEvlz7nu+++U69evdS6dWt9+OGHysjI0Ny5cyVV7EL2atWquWzbbDYVFRVd8TwAri7OVAGotGw2mzp16qROnTopOTlZoaGh+vjjj+Xt7a3CwkKX2i1btig0NFQvvviiOfb9999flb4yMjJUVFSkadOmycPjl/92XbJkiUtNaT1WRNOmTfXpp5+6jG3btu03zwvgynGmCkCltHXrVv3lL3/R9u3blZmZqY8++kjHjx9X8+bNFRYWpq+//lr79+/Xjz/+qPPnz6tJkybKzMzU+++/r0OHDmnWrFn6+OOPr0pvjRs31vnz5zV79mx9++23euedd7RgwQKXmrCwMJ0+fVppaWn68ccf9fPPP1foWI8//rj27dunpKQk/fe//9WSJUuUkpIi6ZfQCeD3Q6gCUCk5HA5t2rRJ9957r26++Wa99NJLmjZtmnr27Knhw4eradOmat++vQIDA7V582bdd999Gj16tBISEtS2bVtt2bJFL7/88lXprU2bNnr99df12muvqWXLlnr33Xc1adIkl5rbb79dTzzxhPr376/AwEBNmTKlQscKDw/XsmXL9NFHH6l169aaP3++eTbObrf/5p8FQPnZDMMw3N0EAMA6EydO1IIFC3TkyBF3twJUKVxTBQCV3Lx589ShQwcFBARo8+bNmjp1qhISEtzdFlDlEKoA4DIyMzMVERFx2f179+5Vo0aNfseOSnfgwAG9+uqrOnHihBo1aqRnnnlGY8eOdXdbQJXDx38AcBkXLlzQd999d9n9YWFh8vLiv00B/IJQBQAAYAHu/gMAALAAoQoAAMAChCoAAAALEKoAAAAsQKgCAACwAKEKAADAAoQqAAAACxCqAAAALPD/ALENR8IaawE9AAAAAElFTkSuQmCC"},"metadata":{}}]},{"cell_type":"code","source":"plt.figure(figsize=(10, 6))\nsns.boxplot(data=df, x='star_rating', y='helpful_votes')\nplt.title('Helpful Votes by Star Rating')\nplt.show()\n","metadata":{"execution":{"iopub.status.busy":"2024-07-09T07:50:59.247510Z","iopub.execute_input":"2024-07-09T07:50:59.247981Z","iopub.status.idle":"2024-07-09T07:50:59.847655Z","shell.execute_reply.started":"2024-07-09T07:50:59.247941Z","shell.execute_reply":"2024-07-09T07:50:59.846377Z"},"trusted":true},"execution_count":16,"outputs":[{"output_type":"display_data","data":{"text/plain":"<Figure size 1000x600 with 1 Axes>","image/png":""},"metadata":{}}]},{"cell_type":"code","source":"df['review_length'] = df['review_body'].apply(lambda x: len(str(x)))\nplt.figure(figsize=(10, 6))\nsns.histplot(df['review_length'], kde=True)\nplt.title('Distribution of Review Length')\nplt.show()\n","metadata":{"execution":{"iopub.status.busy":"2024-07-09T07:50:59.849049Z","iopub.execute_input":"2024-07-09T07:50:59.849508Z","iopub.status.idle":"2024-07-09T07:51:18.785535Z","shell.execute_reply.started":"2024-07-09T07:50:59.849468Z","shell.execute_reply":"2024-07-09T07:51:18.784375Z"},"trusted":true},"execution_count":17,"outputs":[{"name":"stderr","text":"/opt/conda/lib/python3.10/site-packages/seaborn/_oldcore.py:1119: FutureWarning: use_inf_as_na option is deprecated and will be removed in a future version. Convert inf values to NaN before operating instead.\n  with pd.option_context('mode.use_inf_as_na', True):\n","output_type":"stream"},{"output_type":"display_data","data":{"text/plain":"<Figure size 1000x600 with 1 Axes>","image/png":""},"metadata":{}}]},{"cell_type":"code","source":"from wordcloud import WordCloud\n\ntext = ' '.join(df['review_body'].dropna())\nwordcloud = WordCloud(width=800, height=400, background_color='white').generate(text)\n\nplt.figure(figsize=(10, 8))\nplt.imshow(wordcloud, interpolation='bilinear')\nplt.axis('off')\nplt.title('Word Cloud of Review Body')\nplt.show()\n","metadata":{"execution":{"iopub.status.busy":"2024-07-09T07:51:18.787309Z","iopub.execute_input":"2024-07-09T07:51:18.787782Z","iopub.status.idle":"2024-07-09T07:53:02.402785Z","shell.execute_reply.started":"2024-07-09T07:51:18.787741Z","shell.execute_reply":"2024-07-09T07:53:02.399666Z"},"trusted":true},"execution_count":18,"outputs":[{"traceback":["\u001b[0;31m---------------------------------------------------------------------------\u001b[0m","\u001b[0;31mKeyboardInterrupt\u001b[0m                         Traceback (most recent call last)","Cell \u001b[0;32mIn[18], line 4\u001b[0m\n\u001b[1;32m      1\u001b[0m \u001b[38;5;28;01mfrom\u001b[39;00m \u001b[38;5;21;01mwordcloud\u001b[39;00m \u001b[38;5;28;01mimport\u001b[39;00m WordCloud\n\u001b[1;32m      3\u001b[0m text \u001b[38;5;241m=\u001b[39m \u001b[38;5;124m'\u001b[39m\u001b[38;5;124m \u001b[39m\u001b[38;5;124m'\u001b[39m\u001b[38;5;241m.\u001b[39mjoin(df[\u001b[38;5;124m'\u001b[39m\u001b[38;5;124mreview_body\u001b[39m\u001b[38;5;124m'\u001b[39m]\u001b[38;5;241m.\u001b[39mdropna())\n\u001b[0;32m----> 4\u001b[0m wordcloud \u001b[38;5;241m=\u001b[39m \u001b[43mWordCloud\u001b[49m\u001b[43m(\u001b[49m\u001b[43mwidth\u001b[49m\u001b[38;5;241;43m=\u001b[39;49m\u001b[38;5;241;43m800\u001b[39;49m\u001b[43m,\u001b[49m\u001b[43m \u001b[49m\u001b[43mheight\u001b[49m\u001b[38;5;241;43m=\u001b[39;49m\u001b[38;5;241;43m400\u001b[39;49m\u001b[43m,\u001b[49m\u001b[43m \u001b[49m\u001b[43mbackground_color\u001b[49m\u001b[38;5;241;43m=\u001b[39;49m\u001b[38;5;124;43m'\u001b[39;49m\u001b[38;5;124;43mwhite\u001b[39;49m\u001b[38;5;124;43m'\u001b[39;49m\u001b[43m)\u001b[49m\u001b[38;5;241;43m.\u001b[39;49m\u001b[43mgenerate\u001b[49m\u001b[43m(\u001b[49m\u001b[43mtext\u001b[49m\u001b[43m)\u001b[49m\n\u001b[1;32m      6\u001b[0m plt\u001b[38;5;241m.\u001b[39mfigure(figsize\u001b[38;5;241m=\u001b[39m(\u001b[38;5;241m10\u001b[39m, \u001b[38;5;241m8\u001b[39m))\n\u001b[1;32m      7\u001b[0m plt\u001b[38;5;241m.\u001b[39mimshow(wordcloud, interpolation\u001b[38;5;241m=\u001b[39m\u001b[38;5;124m'\u001b[39m\u001b[38;5;124mbilinear\u001b[39m\u001b[38;5;124m'\u001b[39m)\n","File \u001b[0;32m/opt/conda/lib/python3.10/site-packages/wordcloud/wordcloud.py:642\u001b[0m, in \u001b[0;36mWordCloud.generate\u001b[0;34m(self, text)\u001b[0m\n\u001b[1;32m    627\u001b[0m \u001b[38;5;28;01mdef\u001b[39;00m \u001b[38;5;21mgenerate\u001b[39m(\u001b[38;5;28mself\u001b[39m, text):\n\u001b[1;32m    628\u001b[0m \u001b[38;5;250m    \u001b[39m\u001b[38;5;124;03m\"\"\"Generate wordcloud from text.\u001b[39;00m\n\u001b[1;32m    629\u001b[0m \n\u001b[1;32m    630\u001b[0m \u001b[38;5;124;03m    The input \"text\" is expected to be a natural text. If you pass a sorted\u001b[39;00m\n\u001b[0;32m   (...)\u001b[0m\n\u001b[1;32m    640\u001b[0m \u001b[38;5;124;03m    self\u001b[39;00m\n\u001b[1;32m    641\u001b[0m \u001b[38;5;124;03m    \"\"\"\u001b[39;00m\n\u001b[0;32m--> 642\u001b[0m     \u001b[38;5;28;01mreturn\u001b[39;00m \u001b[38;5;28;43mself\u001b[39;49m\u001b[38;5;241;43m.\u001b[39;49m\u001b[43mgenerate_from_text\u001b[49m\u001b[43m(\u001b[49m\u001b[43mtext\u001b[49m\u001b[43m)\u001b[49m\n","File \u001b[0;32m/opt/conda/lib/python3.10/site-packages/wordcloud/wordcloud.py:623\u001b[0m, in \u001b[0;36mWordCloud.generate_from_text\u001b[0;34m(self, text)\u001b[0m\n\u001b[1;32m    606\u001b[0m \u001b[38;5;28;01mdef\u001b[39;00m \u001b[38;5;21mgenerate_from_text\u001b[39m(\u001b[38;5;28mself\u001b[39m, text):\n\u001b[1;32m    607\u001b[0m \u001b[38;5;250m    \u001b[39m\u001b[38;5;124;03m\"\"\"Generate wordcloud from text.\u001b[39;00m\n\u001b[1;32m    608\u001b[0m \n\u001b[1;32m    609\u001b[0m \u001b[38;5;124;03m    The input \"text\" is expected to be a natural text. If you pass a sorted\u001b[39;00m\n\u001b[0;32m   (...)\u001b[0m\n\u001b[1;32m    621\u001b[0m \u001b[38;5;124;03m    self\u001b[39;00m\n\u001b[1;32m    622\u001b[0m \u001b[38;5;124;03m    \"\"\"\u001b[39;00m\n\u001b[0;32m--> 623\u001b[0m     words \u001b[38;5;241m=\u001b[39m \u001b[38;5;28;43mself\u001b[39;49m\u001b[38;5;241;43m.\u001b[39;49m\u001b[43mprocess_text\u001b[49m\u001b[43m(\u001b[49m\u001b[43mtext\u001b[49m\u001b[43m)\u001b[49m\n\u001b[1;32m    624\u001b[0m     \u001b[38;5;28mself\u001b[39m\u001b[38;5;241m.\u001b[39mgenerate_from_frequencies(words)\n\u001b[1;32m    625\u001b[0m     \u001b[38;5;28;01mreturn\u001b[39;00m \u001b[38;5;28mself\u001b[39m\n","File \u001b[0;32m/opt/conda/lib/python3.10/site-packages/wordcloud/wordcloud.py:598\u001b[0m, in \u001b[0;36mWordCloud.process_text\u001b[0;34m(self, text)\u001b[0m\n\u001b[1;32m    596\u001b[0m stopwords \u001b[38;5;241m=\u001b[39m \u001b[38;5;28mset\u001b[39m([i\u001b[38;5;241m.\u001b[39mlower() \u001b[38;5;28;01mfor\u001b[39;00m i \u001b[38;5;129;01min\u001b[39;00m \u001b[38;5;28mself\u001b[39m\u001b[38;5;241m.\u001b[39mstopwords])\n\u001b[1;32m    597\u001b[0m \u001b[38;5;28;01mif\u001b[39;00m \u001b[38;5;28mself\u001b[39m\u001b[38;5;241m.\u001b[39mcollocations:\n\u001b[0;32m--> 598\u001b[0m     word_counts \u001b[38;5;241m=\u001b[39m \u001b[43munigrams_and_bigrams\u001b[49m\u001b[43m(\u001b[49m\u001b[43mwords\u001b[49m\u001b[43m,\u001b[49m\u001b[43m \u001b[49m\u001b[43mstopwords\u001b[49m\u001b[43m,\u001b[49m\u001b[43m \u001b[49m\u001b[38;5;28;43mself\u001b[39;49m\u001b[38;5;241;43m.\u001b[39;49m\u001b[43mnormalize_plurals\u001b[49m\u001b[43m,\u001b[49m\u001b[43m \u001b[49m\u001b[38;5;28;43mself\u001b[39;49m\u001b[38;5;241;43m.\u001b[39;49m\u001b[43mcollocation_threshold\u001b[49m\u001b[43m)\u001b[49m\n\u001b[1;32m    599\u001b[0m \u001b[38;5;28;01melse\u001b[39;00m:\n\u001b[1;32m    600\u001b[0m     \u001b[38;5;66;03m# remove stopwords\u001b[39;00m\n\u001b[1;32m    601\u001b[0m     words \u001b[38;5;241m=\u001b[39m [word \u001b[38;5;28;01mfor\u001b[39;00m word \u001b[38;5;129;01min\u001b[39;00m words \u001b[38;5;28;01mif\u001b[39;00m word\u001b[38;5;241m.\u001b[39mlower() \u001b[38;5;129;01mnot\u001b[39;00m \u001b[38;5;129;01min\u001b[39;00m stopwords]\n","File \u001b[0;32m/opt/conda/lib/python3.10/site-packages/wordcloud/tokenization.py:43\u001b[0m, in \u001b[0;36munigrams_and_bigrams\u001b[0;34m(words, stopwords, normalize_plurals, collocation_threshold)\u001b[0m\n\u001b[1;32m     39\u001b[0m \u001b[38;5;28;01mdef\u001b[39;00m \u001b[38;5;21munigrams_and_bigrams\u001b[39m(words, stopwords, normalize_plurals\u001b[38;5;241m=\u001b[39m\u001b[38;5;28;01mTrue\u001b[39;00m, collocation_threshold\u001b[38;5;241m=\u001b[39m\u001b[38;5;241m30\u001b[39m):\n\u001b[1;32m     40\u001b[0m     \u001b[38;5;66;03m# We must create the bigrams before removing the stopword tokens from the words, or else we get bigrams like\u001b[39;00m\n\u001b[1;32m     41\u001b[0m     \u001b[38;5;66;03m# \"thank much\" from \"thank you very much\".\u001b[39;00m\n\u001b[1;32m     42\u001b[0m     \u001b[38;5;66;03m# We don't allow any of the words in the bigram to be stopwords\u001b[39;00m\n\u001b[0;32m---> 43\u001b[0m     bigrams \u001b[38;5;241m=\u001b[39m \u001b[38;5;28;43mlist\u001b[39;49m\u001b[43m(\u001b[49m\u001b[43mp\u001b[49m\u001b[43m \u001b[49m\u001b[38;5;28;43;01mfor\u001b[39;49;00m\u001b[43m \u001b[49m\u001b[43mp\u001b[49m\u001b[43m \u001b[49m\u001b[38;5;129;43;01min\u001b[39;49;00m\u001b[43m \u001b[49m\u001b[43mpairwise\u001b[49m\u001b[43m(\u001b[49m\u001b[43mwords\u001b[49m\u001b[43m)\u001b[49m\u001b[43m \u001b[49m\u001b[38;5;28;43;01mif\u001b[39;49;00m\u001b[43m \u001b[49m\u001b[38;5;129;43;01mnot\u001b[39;49;00m\u001b[43m \u001b[49m\u001b[38;5;28;43many\u001b[39;49m\u001b[43m(\u001b[49m\u001b[43mw\u001b[49m\u001b[38;5;241;43m.\u001b[39;49m\u001b[43mlower\u001b[49m\u001b[43m(\u001b[49m\u001b[43m)\u001b[49m\u001b[43m \u001b[49m\u001b[38;5;129;43;01min\u001b[39;49;00m\u001b[43m \u001b[49m\u001b[43mstopwords\u001b[49m\u001b[43m \u001b[49m\u001b[38;5;28;43;01mfor\u001b[39;49;00m\u001b[43m \u001b[49m\u001b[43mw\u001b[49m\u001b[43m \u001b[49m\u001b[38;5;129;43;01min\u001b[39;49;00m\u001b[43m \u001b[49m\u001b[43mp\u001b[49m\u001b[43m)\u001b[49m\u001b[43m)\u001b[49m\n\u001b[1;32m     44\u001b[0m     unigrams \u001b[38;5;241m=\u001b[39m \u001b[38;5;28mlist\u001b[39m(w \u001b[38;5;28;01mfor\u001b[39;00m w \u001b[38;5;129;01min\u001b[39;00m words \u001b[38;5;28;01mif\u001b[39;00m w\u001b[38;5;241m.\u001b[39mlower() \u001b[38;5;129;01mnot\u001b[39;00m \u001b[38;5;129;01min\u001b[39;00m stopwords)\n\u001b[1;32m     45\u001b[0m     n_words \u001b[38;5;241m=\u001b[39m \u001b[38;5;28mlen\u001b[39m(unigrams)\n","File \u001b[0;32m/opt/conda/lib/python3.10/site-packages/wordcloud/tokenization.py:43\u001b[0m, in \u001b[0;36m<genexpr>\u001b[0;34m(.0)\u001b[0m\n\u001b[1;32m     39\u001b[0m \u001b[38;5;28;01mdef\u001b[39;00m \u001b[38;5;21munigrams_and_bigrams\u001b[39m(words, stopwords, normalize_plurals\u001b[38;5;241m=\u001b[39m\u001b[38;5;28;01mTrue\u001b[39;00m, collocation_threshold\u001b[38;5;241m=\u001b[39m\u001b[38;5;241m30\u001b[39m):\n\u001b[1;32m     40\u001b[0m     \u001b[38;5;66;03m# We must create the bigrams before removing the stopword tokens from the words, or else we get bigrams like\u001b[39;00m\n\u001b[1;32m     41\u001b[0m     \u001b[38;5;66;03m# \"thank much\" from \"thank you very much\".\u001b[39;00m\n\u001b[1;32m     42\u001b[0m     \u001b[38;5;66;03m# We don't allow any of the words in the bigram to be stopwords\u001b[39;00m\n\u001b[0;32m---> 43\u001b[0m     bigrams \u001b[38;5;241m=\u001b[39m \u001b[38;5;28mlist\u001b[39m(p \u001b[38;5;28;01mfor\u001b[39;00m p \u001b[38;5;129;01min\u001b[39;00m pairwise(words) \u001b[38;5;28;01mif\u001b[39;00m \u001b[38;5;129;01mnot\u001b[39;00m \u001b[38;5;28;43many\u001b[39;49m\u001b[43m(\u001b[49m\u001b[43mw\u001b[49m\u001b[38;5;241;43m.\u001b[39;49m\u001b[43mlower\u001b[49m\u001b[43m(\u001b[49m\u001b[43m)\u001b[49m\u001b[43m \u001b[49m\u001b[38;5;129;43;01min\u001b[39;49;00m\u001b[43m \u001b[49m\u001b[43mstopwords\u001b[49m\u001b[43m \u001b[49m\u001b[38;5;28;43;01mfor\u001b[39;49;00m\u001b[43m \u001b[49m\u001b[43mw\u001b[49m\u001b[43m \u001b[49m\u001b[38;5;129;43;01min\u001b[39;49;00m\u001b[43m \u001b[49m\u001b[43mp\u001b[49m\u001b[43m)\u001b[49m)\n\u001b[1;32m     44\u001b[0m     unigrams \u001b[38;5;241m=\u001b[39m \u001b[38;5;28mlist\u001b[39m(w \u001b[38;5;28;01mfor\u001b[39;00m w \u001b[38;5;129;01min\u001b[39;00m words \u001b[38;5;28;01mif\u001b[39;00m w\u001b[38;5;241m.\u001b[39mlower() \u001b[38;5;129;01mnot\u001b[39;00m \u001b[38;5;129;01min\u001b[39;00m stopwords)\n\u001b[1;32m     45\u001b[0m     n_words \u001b[38;5;241m=\u001b[39m \u001b[38;5;28mlen\u001b[39m(unigrams)\n","File \u001b[0;32m/opt/conda/lib/python3.10/site-packages/wordcloud/tokenization.py:43\u001b[0m, in \u001b[0;36m<genexpr>\u001b[0;34m(.0)\u001b[0m\n\u001b[1;32m     39\u001b[0m \u001b[38;5;28;01mdef\u001b[39;00m \u001b[38;5;21munigrams_and_bigrams\u001b[39m(words, stopwords, normalize_plurals\u001b[38;5;241m=\u001b[39m\u001b[38;5;28;01mTrue\u001b[39;00m, collocation_threshold\u001b[38;5;241m=\u001b[39m\u001b[38;5;241m30\u001b[39m):\n\u001b[1;32m     40\u001b[0m     \u001b[38;5;66;03m# We must create the bigrams before removing the stopword tokens from the words, or else we get bigrams like\u001b[39;00m\n\u001b[1;32m     41\u001b[0m     \u001b[38;5;66;03m# \"thank much\" from \"thank you very much\".\u001b[39;00m\n\u001b[1;32m     42\u001b[0m     \u001b[38;5;66;03m# We don't allow any of the words in the bigram to be stopwords\u001b[39;00m\n\u001b[0;32m---> 43\u001b[0m     bigrams \u001b[38;5;241m=\u001b[39m \u001b[38;5;28mlist\u001b[39m(p \u001b[38;5;28;01mfor\u001b[39;00m p \u001b[38;5;129;01min\u001b[39;00m pairwise(words) \u001b[38;5;28;01mif\u001b[39;00m \u001b[38;5;129;01mnot\u001b[39;00m \u001b[38;5;28many\u001b[39m(\u001b[43mw\u001b[49m\u001b[38;5;241;43m.\u001b[39;49m\u001b[43mlower\u001b[49m\u001b[43m(\u001b[49m\u001b[43m)\u001b[49m \u001b[38;5;129;01min\u001b[39;00m stopwords \u001b[38;5;28;01mfor\u001b[39;00m w \u001b[38;5;129;01min\u001b[39;00m p))\n\u001b[1;32m     44\u001b[0m     unigrams \u001b[38;5;241m=\u001b[39m \u001b[38;5;28mlist\u001b[39m(w \u001b[38;5;28;01mfor\u001b[39;00m w \u001b[38;5;129;01min\u001b[39;00m words \u001b[38;5;28;01mif\u001b[39;00m w\u001b[38;5;241m.\u001b[39mlower() \u001b[38;5;129;01mnot\u001b[39;00m \u001b[38;5;129;01min\u001b[39;00m stopwords)\n\u001b[1;32m     45\u001b[0m     n_words \u001b[38;5;241m=\u001b[39m \u001b[38;5;28mlen\u001b[39m(unigrams)\n","\u001b[0;31mKeyboardInterrupt\u001b[0m: "],"ename":"KeyboardInterrupt","evalue":"","output_type":"error"}]},{"cell_type":"code","source":"def sentiment_label(rating):\n    if rating in [1, 2]:\n        return 'negative'\n    elif rating == 3:\n        return 'neutral'\n    else:\n        return 'positive'\n\ndf['sentiment'] = df['star_rating'].apply(sentiment_label)\n","metadata":{"execution":{"iopub.status.busy":"2024-07-09T07:53:08.083713Z","iopub.execute_input":"2024-07-09T07:53:08.084870Z","iopub.status.idle":"2024-07-09T07:53:08.454954Z","shell.execute_reply.started":"2024-07-09T07:53:08.084830Z","shell.execute_reply":"2024-07-09T07:53:08.453933Z"},"trusted":true},"execution_count":19,"outputs":[]},{"cell_type":"code","source":"sns.countplot(data=df, x='sentiment')\nplt.title('Distribution of Sentiments')\nplt.show()\n","metadata":{"execution":{"iopub.status.busy":"2024-07-09T07:53:08.456678Z","iopub.execute_input":"2024-07-09T07:53:08.457048Z","iopub.status.idle":"2024-07-09T07:53:09.640791Z","shell.execute_reply.started":"2024-07-09T07:53:08.457017Z","shell.execute_reply":"2024-07-09T07:53:09.639442Z"},"trusted":true},"execution_count":20,"outputs":[{"output_type":"display_data","data":{"text/plain":"<Figure size 640x480 with 1 Axes>","image/png":""},"metadata":{}}]},{"cell_type":"code","source":"from collections import Counter\nfrom nltk.corpus import stopwords\nfrom nltk.tokenize import word_tokenize\n\nstop_words = set(stopwords.words('english'))\n\n\n","metadata":{"execution":{"iopub.status.busy":"2024-07-09T07:53:09.643202Z","iopub.execute_input":"2024-07-09T07:53:09.643671Z","iopub.status.idle":"2024-07-09T07:53:10.505643Z","shell.execute_reply.started":"2024-07-09T07:53:09.643629Z","shell.execute_reply":"2024-07-09T07:53:10.504570Z"},"trusted":true},"execution_count":21,"outputs":[]},{"cell_type":"code","source":"import re\ndef preprocess_text(text):\n    text = text.lower()\n    text = re.sub(r'<[^>]+>', ' ', text)  # Remove HTML tags\n    text = re.sub(r'[^a-z\\s]', '', text)  # Remove non-alphabetic characters\n    text = ' '.join([word for word in text.split() if word not in stop_words])  # Remove stopwords\n    return text\n\n# Fill missing values with empty string\ndf['review_headline'] = df['review_headline'].fillna('')\ndf['review_body'] = df['review_body'].fillna('')\n\n# Apply text preprocessing\ndf['review_headline'] = df['review_headline'].apply(preprocess_text)\ndf['review_body'] = df['review_body'].apply(preprocess_text)\n\n# Combine headline and body\ndf['review_text'] = df['review_headline'] + ' ' + df['review_body']\n\nprint(df[['review_headline', 'review_body', 'review_text']].head())","metadata":{"execution":{"iopub.status.busy":"2024-07-09T07:53:10.507182Z","iopub.execute_input":"2024-07-09T07:53:10.507648Z","iopub.status.idle":"2024-07-09T07:53:48.933394Z","shell.execute_reply.started":"2024-07-09T07:53:10.507607Z","shell.execute_reply":"2024-07-09T07:53:48.931978Z"},"trusted":true},"execution_count":22,"outputs":[{"name":"stdout","text":"                  review_headline  \\\n0                     three stars   \n1                      five stars   \n2                     three stars   \n3  purchase friend return playing   \n4                      five stars   \n\n                                         review_body  \\\n0                      works good induces alot noise   \n1                   nice headphones reasonable price   \n2                                 removes dust clean   \n3  purchase friend return playing father folks lo...   \n4                                        awesome mic   \n\n                                         review_text  \n0          three stars works good induces alot noise  \n1        five stars nice headphones reasonable price  \n2                     three stars removes dust clean  \n3  purchase friend return playing purchase friend...  \n4                             five stars awesome mic  \n","output_type":"stream"}]},{"cell_type":"code","source":"df['review_text'] = df['review_headline'] + ' ' + df['review_body']\n","metadata":{"execution":{"iopub.status.busy":"2024-07-09T07:53:48.936099Z","iopub.execute_input":"2024-07-09T07:53:48.936499Z","iopub.status.idle":"2024-07-09T07:53:49.661765Z","shell.execute_reply.started":"2024-07-09T07:53:48.936468Z","shell.execute_reply":"2024-07-09T07:53:49.660615Z"},"trusted":true},"execution_count":23,"outputs":[]},{"cell_type":"code","source":"from sklearn.feature_extraction.text import TfidfVectorizer\n\nvectorizer = TfidfVectorizer(max_features=10000)\nX = vectorizer.fit_transform(df['review_text'])\n","metadata":{"execution":{"iopub.status.busy":"2024-07-09T07:53:49.663137Z","iopub.execute_input":"2024-07-09T07:53:49.663500Z","iopub.status.idle":"2024-07-09T07:54:37.139763Z","shell.execute_reply.started":"2024-07-09T07:53:49.663470Z","shell.execute_reply":"2024-07-09T07:54:37.138550Z"},"trusted":true},"execution_count":24,"outputs":[]},{"cell_type":"code","source":"y = df['sentiment']\n","metadata":{"execution":{"iopub.status.busy":"2024-07-09T07:54:37.141889Z","iopub.execute_input":"2024-07-09T07:54:37.142385Z","iopub.status.idle":"2024-07-09T07:54:37.149741Z","shell.execute_reply.started":"2024-07-09T07:54:37.142330Z","shell.execute_reply":"2024-07-09T07:54:37.148408Z"},"trusted":true},"execution_count":25,"outputs":[]},{"cell_type":"code","source":"from sklearn.model_selection import train_test_split\n\nX_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.2, random_state=42)\n","metadata":{"execution":{"iopub.status.busy":"2024-07-09T07:54:37.151247Z","iopub.execute_input":"2024-07-09T07:54:37.151730Z","iopub.status.idle":"2024-07-09T07:54:37.526427Z","shell.execute_reply.started":"2024-07-09T07:54:37.151669Z","shell.execute_reply":"2024-07-09T07:54:37.525248Z"},"trusted":true},"execution_count":26,"outputs":[]},{"cell_type":"code","source":"from sklearn.linear_model import LogisticRegression\nfrom sklearn.metrics import classification_report\n\nmodel = LogisticRegression()\nmodel.fit(X_train, y_train)\ny_pred = model.predict(X_test)\n\nprint(classification_report(y_test, y_pred))\n","metadata":{"execution":{"iopub.status.busy":"2024-07-09T07:54:37.527912Z","iopub.execute_input":"2024-07-09T07:54:37.528495Z","iopub.status.idle":"2024-07-09T07:55:43.890174Z","shell.execute_reply.started":"2024-07-09T07:54:37.528452Z","shell.execute_reply":"2024-07-09T07:55:43.888800Z"},"trusted":true},"execution_count":27,"outputs":[{"name":"stderr","text":"/opt/conda/lib/python3.10/site-packages/sklearn/linear_model/_logistic.py:458: ConvergenceWarning: lbfgs failed to converge (status=1):\nSTOP: TOTAL NO. of ITERATIONS REACHED LIMIT.\n\nIncrease the number of iterations (max_iter) or scale the data as shown in:\n    https://scikit-learn.org/stable/modules/preprocessing.html\nPlease also refer to the documentation for alternative solver options:\n    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression\n  n_iter_i = _check_optimize_result(\n","output_type":"stream"},{"name":"stdout","text":"              precision    recall  f1-score   support\n\n    negative       0.79      0.75      0.77     21211\n     neutral       0.61      0.29      0.39     13400\n    positive       0.93      0.98      0.95    146190\n\n    accuracy                           0.90    180801\n   macro avg       0.77      0.67      0.70    180801\nweighted avg       0.89      0.90      0.89    180801\n\n","output_type":"stream"}]},{"cell_type":"code","source":"from sklearn.ensemble import GradientBoostingClassifier\n\n# Gradient Boosting Model\nprint('starting model calling')\ngb_model = GradientBoostingClassifier(n_estimators=100)\nprint('fitting now:')\ngb_model.fit(X_train, y_train)\nprint('prdicting now')\ngb_pred = gb_model.predict(X_test)\n\nprint(\"Gradient Boosting Classification Report:\")\nprint(classification_report(y_test, gb_pred))\n","metadata":{"execution":{"iopub.status.busy":"2024-07-09T07:55:43.892724Z","iopub.execute_input":"2024-07-09T07:55:43.893087Z"},"trusted":true},"execution_count":null,"outputs":[{"name":"stdout","text":"starting model calling\nfitting now:\n","output_type":"stream"}]},{"cell_type":"code","source":"","metadata":{"execution":{"iopub.status.busy":"2024-07-09T07:53:02.423970Z","iopub.status.idle":"2024-07-09T07:53:02.424386Z","shell.execute_reply.started":"2024-07-09T07:53:02.424194Z","shell.execute_reply":"2024-07-09T07:53:02.424211Z"},"trusted":true},"execution_count":null,"outputs":[]},{"cell_type":"code","source":"","metadata":{"execution":{"iopub.status.busy":"2024-07-09T07:53:02.426019Z","iopub.status.idle":"2024-07-09T07:53:02.426422Z","shell.execute_reply.started":"2024-07-09T07:53:02.426227Z","shell.execute_reply":"2024-07-09T07:53:02.426243Z"},"trusted":true},"execution_count":null,"outputs":[]},{"cell_type":"code","source":"","metadata":{"execution":{"iopub.status.busy":"2024-07-09T07:53:02.429896Z","iopub.status.idle":"2024-07-09T07:53:02.430312Z","shell.execute_reply.started":"2024-07-09T07:53:02.430110Z","shell.execute_reply":"2024-07-09T07:53:02.430128Z"},"trusted":true},"execution_count":null,"outputs":[]},{"cell_type":"code","source":"import pandas as pd\nfrom transformers import BertTokenizer, BertForSequenceClassification, Trainer, TrainingArguments\nfrom datasets import Dataset\nfrom sklearn.model_selection import train_test_split\nimport torch\n","metadata":{"execution":{"iopub.status.busy":"2024-07-09T07:53:02.431963Z","iopub.status.idle":"2024-07-09T07:53:02.432546Z","shell.execute_reply.started":"2024-07-09T07:53:02.432239Z","shell.execute_reply":"2024-07-09T07:53:02.432261Z"},"trusted":true},"execution_count":null,"outputs":[]},{"cell_type":"code","source":"train_df, test_df = train_test_split(df[['review_text', 'sentiment']], test_size=0.2, random_state=42)","metadata":{"execution":{"iopub.status.busy":"2024-07-09T07:53:02.437746Z","iopub.status.idle":"2024-07-09T07:53:02.438171Z","shell.execute_reply.started":"2024-07-09T07:53:02.437972Z","shell.execute_reply":"2024-07-09T07:53:02.437988Z"},"trusted":true},"execution_count":null,"outputs":[]},{"cell_type":"code","source":"from transformers import BertTokenizer\n\ntokenizer = BertTokenizer.from_pretrained('bert-base-uncased')\n","metadata":{"execution":{"iopub.status.busy":"2024-07-09T07:53:02.439336Z","iopub.status.idle":"2024-07-09T07:53:02.439780Z","shell.execute_reply.started":"2024-07-09T07:53:02.439550Z","shell.execute_reply":"2024-07-09T07:53:02.439566Z"},"trusted":true},"execution_count":null,"outputs":[]},{"cell_type":"code","source":"train_dataset = Dataset.from_pandas(train_df)\ntest_dataset = Dataset.from_pandas(test_df)\n","metadata":{"execution":{"iopub.status.busy":"2024-07-09T07:53:02.441670Z","iopub.status.idle":"2024-07-09T07:53:02.442102Z","shell.execute_reply.started":"2024-07-09T07:53:02.441908Z","shell.execute_reply":"2024-07-09T07:53:02.441926Z"},"trusted":true},"execution_count":null,"outputs":[]},{"cell_type":"code","source":"def tokenize_function(examples):\n    return tokenizer(examples['review_text'], padding='max_length', truncation=True)\n\ntrain_dataset = train_dataset.map(tokenize_function, batched=True)\ntest_dataset = test_dataset.map(tokenize_function, batched=True)\n\ntrain_dataset = train_dataset.rename_column(\"sentiment\", \"labels\")\ntest_dataset = test_dataset.rename_column(\"sentiment\", \"labels\")\n\ntrain_dataset.set_format(type='torch', columns=['input_ids', 'attention_mask', 'labels'])\ntest_dataset.set_format(type='torch', columns=['input_ids', 'attention_mask', 'labels'])\n","metadata":{"execution":{"iopub.status.busy":"2024-07-09T07:53:02.443355Z","iopub.status.idle":"2024-07-09T07:53:02.443776Z","shell.execute_reply.started":"2024-07-09T07:53:02.443554Z","shell.execute_reply":"2024-07-09T07:53:02.443570Z"},"trusted":true},"execution_count":null,"outputs":[]},{"cell_type":"code","source":"model = BertForSequenceClassification.from_pretrained('bert-base-uncased', num_labels=3)\n\ntraining_args = TrainingArguments(\n    output_dir='./results',          \n    evaluation_strategy='epoch',     \n    learning_rate=2e-5,              \n    per_device_train_batch_size=16,  \n    per_device_eval_batch_size=16,   \n    num_train_epochs=3,              \n    weight_decay=0.01,               \n)\n\ntrainer = Trainer(\n    model=model,                         \n    args=training_args,                  \n    train_dataset=train_dataset,         \n    eval_dataset=test_dataset            \n)\n\ntrainer.train()","metadata":{"execution":{"iopub.status.busy":"2024-07-09T07:53:02.445172Z","iopub.status.idle":"2024-07-09T07:53:02.445569Z","shell.execute_reply.started":"2024-07-09T07:53:02.445378Z","shell.execute_reply":"2024-07-09T07:53:02.445394Z"},"trusted":true},"execution_count":null,"outputs":[]},{"cell_type":"code","source":"trainer.evaluate()\n","metadata":{"execution":{"iopub.status.busy":"2024-07-09T07:53:02.446592Z","iopub.status.idle":"2024-07-09T07:53:02.447033Z","shell.execute_reply.started":"2024-07-09T07:53:02.446832Z","shell.execute_reply":"2024-07-09T07:53:02.446849Z"},"trusted":true},"execution_count":null,"outputs":[]},{"cell_type":"code","source":"predictions = trainer.predict(test_dataset)\npreds = predictions.predictions.argmax(-1)\n\nfrom sklearn.metrics import classification_report\ny_true = test_df['sentiment'].tolist()\n\nprint(classification_report(y_true, preds, target_names=['negative', 'neutral', 'positive']))\n","metadata":{"execution":{"iopub.status.busy":"2024-07-09T07:53:02.448127Z","iopub.status.idle":"2024-07-09T07:53:02.448628Z","shell.execute_reply.started":"2024-07-09T07:53:02.448385Z","shell.execute_reply":"2024-07-09T07:53:02.448407Z"},"trusted":true},"execution_count":null,"outputs":[]},{"cell_type":"code","source":"","metadata":{},"execution_count":null,"outputs":[]}]}